name: Release

on:
  workflow_dispatch:
    inputs:
      bumpType:
        required: true
        description: Version Bump
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  tag:
    name: Tag new nersion (${{ github.event.inputs.bumpType }})

    outputs:
      newVersion: ${{ steps.getNewVersion.outputs.version }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Install cargo-edit
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --no-default-features --features set-version cargo-edit
      - uses: actions/setup-python@v3

      - name: Determine current version
        id: getOldVersion
        run: ./ci/get_version.py

      - name: Bump ${{ github.event.inputs.bumpType }} in Cargo.toml
        uses: actions-rs/cargo@v1
        with:
          command: set-version
          args: --bump ${{ github.event.inputs.bumpType }}
      - name: Update Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: update
          args: -p alt

      - name: Determine next version
        id: getNewVersion
        run: ./ci/get_version.py

      - name: Update CHANGELOG.md
        env:
          OLD_VERSION: ${{ steps.getOldVersion.outputs.version }}
          NEW_VERSION: ${{ steps.getNewVersion.outputs.version }}
        run: |
          ./ci/add_changelog_version.py \
            --old-version "$OLD_VERSION" \
            --new-version "$NEW_VERSION"

      - run: git diff --color

      - name: Commit & tag ${{ steps.getNewVersion.outputs.version }}
        env:
          NEW_VERSION: ${{ steps.getNewVersion.outputs.version }}
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "<>"
          git add .
          git commit -m "Release $NEW_VERSION"
          git tag "$NEW_VERSION"

      - name: Push ${{ steps.getNewVersion.outputs.version }}
        env:
          NEW_VERSION: ${{ steps.getNewVersion.outputs.version }}
        run: git push --tags origin main

  package:
    name: Package (${{ needs.tag.outputs.newVersion }})
    needs: tag

    uses: ./.github/workflows/package.yml
    with:
      checkoutRef: ${{ needs.tag.outputs.newVersion }}

  create-release:
    name: Create Release (${{ needs.tag.outputs.newVersion }})
    needs: [package, tag]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: alt-package
          path: packages
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ needs.tag.outputs.newVersion }}
        run: gh release create "$VERSION" packages/*
