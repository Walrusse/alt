name: CI

on:
  pull_request: {}
  push:
    branches:
      - main

jobs:
  check:
    name: cargo check

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: check

  fmt-check:
    name: cargo fmt --check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check --color=always

  test-rust:
    name: cargo test

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: test

  run-help:
    name: run help command

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: help

  package:
    name: package artifacts

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: macos-latest
            target: x86_64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
      - uses: actions/setup-python@v3
        with:
          python-version: 3.x
      - run: |
          ./ci/package.py \
            --rust-target ${{ matrix.target }} \
            --dest-dir dist/release

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - run: cargo clippy --all-targets --all-features -- -D warnings

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ludeeus/action-shellcheck@1.1.0
        with:
          check_together: 'yes'

  fish-check:
    name: check fish code

    strategy:
      matrix:
        include:
          - ppa: ppa:fish-shell/release-3
            os: ubuntu-latest
          - ppa: ppa:fish-shell/release-2
            # fish 2 ppa doesn't support ubuntu 20.04
            os: ubuntu-18.04
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y software-properties-common
          sudo apt-add-repository -y ${{ matrix.ppa }}
          sudo apt-get update -y
          sudo apt-get install fish
      - name: Fish syntax check
        run: find . -iname '*.fish' -print0 | xargs -n1 -0t fish -n

  python-lint:
    name: lint python code

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.x
      - name: Install linter
        run: pip install flake8
      - uses: suo/flake8-github-action@releases/v1
        with:
          checkName: python-lint
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
